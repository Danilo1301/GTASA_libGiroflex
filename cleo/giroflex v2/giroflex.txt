{$CLEO .csa}
{$USE giroflex}

const
    eDrawType_BOX = 0
    eDrawType_TEXT = 1
end

const
    eTextAlign_ALIGN_LEFT = 0   
    eTextAlign_ALIGN_CENTER = 1
    eTextAlign_ALIGN_RIGHT = 2
end

const
    eDrawInfoType_AMOUNT_OF_DRAWITEMS = 0
    eDrawInfoType_TYPE = 1
    eDrawInfoType_UPDATE_TOUCH_STATE = 2
    eDrawInfoType_TOUCH_X = 3
    eDrawInfoType_TOUCH_Y = 4
    eDrawInfoType_POS_X = 5
    eDrawInfoType_POS_Y = 6
    eDrawInfoType_SIZE_X = 7
    eDrawInfoType_SIZE_Y = 8
    eDrawInfoType_R = 9
    eDrawInfoType_G = 10
    eDrawInfoType_B = 11
    eDrawInfoType_A = 12
    eDrawInfoType_GXT_ID = 13
    eDrawInfoType_NUM_1 = 14    
    eDrawInfoType_NUM_2 = 15
    eDrawInfoType_AMOUNT_OF_CORONAS = 16
    eDrawInfoType_CORONA_CAR = 17
    eDrawInfoType_CORONA_OFFSET_X = 18
    eDrawInfoType_CORONA_OFFSET_Y = 19
    eDrawInfoType_CORONA_OFFSET_Z = 20
    eDrawInfoType_ALIGN = 21
    eDrawInfoType_CORONA_USE_SHADOW = 22
    eDrawInfoType_CORONA_USE_POINT_LIGHT = 23
    eDrawInfoType_CORONA_R = 24
    eDrawInfoType_CORONA_G = 25
    eDrawInfoType_CORONA_B = 26
    eDrawInfoType_CORONA_A = 27
    eDrawInfoType_CORONA_SHADOW_INTENSITY = 28
    eDrawInfoType_CORONA_SHADOW_SIZE = 29
    eDrawInfoType_CORONA_POINTLIGHT_DISTANCE = 30
    eDrawInfoType_SHADOW_R = 31
    eDrawInfoType_SHADOW_G = 32
    eDrawInfoType_SHADOW_B = 33
    eDrawInfoType_POINT_LIGHT_R = 34
    eDrawInfoType_POINT_LIGHT_G = 35
    eDrawInfoType_POINT_LIGHT_B = 36
    eDrawInfoType_CORONA_SHADOW_OFFSET_X = 37
    eDrawInfoType_CAR_GET_AMOUNT = 38
    eDrawInfoType_CAR_GET_ID = 39
    eDrawInfoType_CAR_SET_TO_REMOVE = 40
    eDrawInfoType_MENU_OFFSET_X = 41
end

const
    VAR_Veh = 0@
    VAR_VehX = 1@
    VAR_VehY = 2@
    VAR_VehZ = 3@
    
    VAR_PosX = 4@
    VAR_PosY = 5@
    VAR_PosZ = 6@
    VAR_ModelId = 7@
    
    VAR_Integer1 = 8@
    VAR_Integer2 = 9@
    
    VAR_Type = 10@ 
    
    VAR_SizeX = 11@
    VAR_SizeY = 12@
    
    VAR_ColorR = 13@
    VAR_ColorG = 14@
    VAR_ColorB = 15@
    VAR_ColorA = 16@
    
    VAR_GxtId = 17@
    VAR_Num1 = 18@
    VAR_Num2 = 19@

    
    VAR_STR_1 = 20@v
    
    VAR_Clock = 24@ 
    VAR_PrevClock = 25@
    
    VAR_Align = 26@
    
    VAR_Float1 = 27@
    VAR_Float2 = 28@
    
    PrevClock = 29@

    //30
    //31
    //32
    
    Clock = 33@
    
    MenuOffsetX = 34@
        
end

var
    VAR_Integer1 : Int = 0
    VAR_Integer2 : Int = 0
    
    PrevClock : Int = 0
    Clock : Int = 0
    
    VAR_Veh : Int = 0

    VAR_PosX : Float = 0.0    
    MenuOffsetX : Float = 0.0
end

//----------------------------------------------------

0000:
jump @MAIN

//----------------------------------------------------

:VehiclePool
hex
"_ZN6CPools15ms_pVehiclePoolE" 00
end

//----------------------------------------------------

:MAIN
wait 0

/*
03F0: enable_text_draw 1
0340: set_text_draw_RGBA 0 20 255 255 
033F: set_text_draw_letter_size 0.5 3.0 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers 300.0 200.0 GXT 'DGFX2' numbers 22 22
*/

//0E00: test_giroflex_lib 152

gosub @SEND_TOUCH

//gosub @FIND_CARS   //crash

gosub @SEND_PLAYER_POS

gosub @SEND_CURRENT_CAR


gosub @UPDATE_CARS

gosub @GET_DELTA_TIME

0EF2: process_giroflex_lib deltaMs VAR_Integer1

gosub @RENDER_CORONAS

0EF8: MenuOffsetX = get_draw_item_info eDrawInfoType_MENU_OFFSET_X id 0

gosub @DRAW_ITEMS

jump @MAIN

//----------------------------------------------------

:SEND_TOUCH

for VAR_Integer1 = 1 to 9
    0DE0: VAR_Integer2 = get_touch_point_state VAR_Integer1 mintime 0
    0EF3: send_touch_state VAR_Integer1 state VAR_Integer2
end
return

//----------------------------------------------------

:FIND_CARS

VAR_Integer1 = 0
    
0DD0: 30@ = get_label_addr @VehiclePool
0DD1: 30@ = get_func_addr_by_cstr_name 30@
0DD8: 30@ = read_mem_addr 30@ size 4 fix_ib 0
000A: 30@ += 0x4
0DD8: 30@ = read_mem_addr 30@ size 4 fix_ib 0
for 31@ = 0 to 35584 step 0x100
	0DD8: 32@ = read_mem_addr 30@ size 1 fix_ib 0
	000A: 30@ += 0x1
	if and
	0029: 32@ >= 0x00
	001B: 0x80 > 32@
	then
		005A: 32@ += 31@ // (int)
		if
		056E: car 32@ defined
		then              
			020B: explode_car 32@
			
			
			/*
			0407: store_coords_to VAR_PosX VAR_PosY VAR_PosZ from_car 32@ with_offset 0.0 0.0 0.0
            0441: VAR_ModelId = car 32@ model
               
            0EF0: send_car_position 32@ model_id VAR_ModelId pos VAR_PosX VAR_PosY VAR_PosZ
            
        
            06A2: get_car 32@ velocity_in_direction_XYZ VAR_PosX VAR_PosY VAR_PosZ
          
            0EF7: send_car_velocity 32@ vel VAR_PosX VAR_PosY VAR_PosZ
            */
            
			VAR_Integer1 += 1
		end
	end
end

/*
03F0: enable_text_draw 1
0340: set_text_draw_RGBA 0 20 255 255 
033F: set_text_draw_letter_size 0.5 3.0 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers 300.0 200.0 GXT 'DGFX1' numbers VAR_Integer1 0 
*/
return

//----------------------------------------------------

:SEND_PLAYER_POS
if and
    0256:   player $PLAYER_CHAR defined
    056D:   actor $PLAYER_ACTOR defined 
then
    04C4: store_coords_to VAR_PosX VAR_PosY VAR_PosZ from_actor $PLAYER_ACTOR with_offset 0.0 0.0 0.0
    0EF4: send_player_position 0 pos VAR_PosX VAR_PosY VAR_PosZ
end
return

//----------------------------------------------------

:SEND_CURRENT_CAR

0811: VAR_Veh = actor $PLAYER_ACTOR used_car
VAR_ModelId = -1

if 056E: car VAR_Veh defined
then
    0441: VAR_ModelId = car VAR_Veh model
end
0EF1: send_current_vehicle VAR_Veh modelid VAR_ModelId

return

//----------------------------------------------------

:UPDATE_CARS

0EF8: VAR_Integer2 = get_draw_item_info eDrawInfoType_CAR_GET_AMOUNT id 0
VAR_Integer1 = 0
while VAR_Integer1 < VAR_Integer2

    0EF8: VAR_Veh = get_draw_item_info eDrawInfoType_CAR_GET_ID id VAR_Integer1
 
    if 056E: car VAR_Veh defined
    then
        0407: store_coords_to VAR_PosX VAR_PosY VAR_PosZ from_car VAR_Veh with_offset 0.0 0.0 0.0
        0441: VAR_ModelId = car VAR_Veh model
        0EF0: send_car_position VAR_Veh model_id VAR_ModelId pos VAR_PosX VAR_PosY VAR_PosZ
    
        06A2: get_car VAR_Veh velocity_in_direction_XYZ VAR_PosX VAR_PosY VAR_PosZ
        0EF7: send_car_velocity VAR_Veh vel VAR_PosX VAR_PosY VAR_PosZ   
    else
        0EF8: VAR_Veh = get_draw_item_info eDrawInfoType_CAR_SET_TO_REMOVE id VAR_Veh
    end

    VAR_Integer1 += 1
end
return

//----------------------------------------------------

:GET_DELTA_TIME

VAR_Integer1 = 1

01BD: Clock = current_time_in_ms

if PrevClock == Clock
then
else
    VAR_Integer1 = 0
    VAR_Integer1 = Clock
    VAR_Integer1 -= PrevClock
    01BD: PrevClock = current_time_in_ms 
end   
return

//----------------------------------------------------

:RENDER_CORONAS

0EF8: VAR_Integer2 = get_draw_item_info eDrawInfoType_AMOUNT_OF_CORONAS id 0
VAR_Integer1 = 0
while VAR_Integer1 < VAR_Integer2

    0EF8: VAR_Veh = get_draw_item_info eDrawInfoType_CORONA_CAR id VAR_Integer1

    if    
        056E: car VAR_Veh defined
    then
        0EF8: VAR_Num1 = get_draw_item_info eDrawInfoType_CORONA_USE_SHADOW id VAR_Integer1
        if VAR_Num1 == 1
        then
            0EF8: VAR_PosX = get_draw_item_info eDrawInfoType_CORONA_SHADOW_OFFSET_X id VAR_Integer1
            0EF8: VAR_PosY = get_draw_item_info eDrawInfoType_CORONA_OFFSET_Y id VAR_Integer1
            0EF8: VAR_PosZ = get_draw_item_info eDrawInfoType_CORONA_OFFSET_Z id VAR_Integer1
            0407: store_coords_to VAR_VehX VAR_VehY VAR_VehZ from_car VAR_Veh with_offset VAR_PosX VAR_PosY VAR_PosZ
        
            0EF8: VAR_ColorR = get_draw_item_info eDrawInfoType_SHADOW_R id VAR_Integer1
            0EF8: VAR_ColorG = get_draw_item_info eDrawInfoType_SHADOW_G id VAR_Integer1
            0EF8: VAR_ColorB = get_draw_item_info eDrawInfoType_SHADOW_B id VAR_Integer1
            0EF8: VAR_Float1 = get_draw_item_info eDrawInfoType_CORONA_SHADOW_SIZE id VAR_Integer1
        
            016F: create_particle 3 rotation_factor 0.0 size VAR_Float1 intensity 255 flags VAR_ColorR VAR_ColorG VAR_ColorB at VAR_VehX VAR_VehY VAR_VehZ
        end
       
       
        0EF8: VAR_PosX = get_draw_item_info eDrawInfoType_CORONA_OFFSET_X id VAR_Integer1
        0EF8: VAR_PosY = get_draw_item_info eDrawInfoType_CORONA_OFFSET_Y id VAR_Integer1
        0EF8: VAR_PosZ = get_draw_item_info eDrawInfoType_CORONA_OFFSET_Z id VAR_Integer1
        0407: store_coords_to VAR_VehX VAR_VehY VAR_VehZ from_car VAR_Veh with_offset VAR_PosX VAR_PosY VAR_PosZ
        
      
        0EF8: VAR_Num1 = get_draw_item_info eDrawInfoType_CORONA_USE_POINT_LIGHT id VAR_Integer1
        if VAR_Num1 == 1
        then
            0EF8: VAR_ColorR = get_draw_item_info eDrawInfoType_POINT_LIGHT_R id VAR_Integer1
            0EF8: VAR_ColorG = get_draw_item_info eDrawInfoType_POINT_LIGHT_G id VAR_Integer1
            0EF8: VAR_ColorB = get_draw_item_info eDrawInfoType_POINT_LIGHT_B id VAR_Integer1
            0EF8: VAR_Float1 = get_draw_item_info eDrawInfoType_CORONA_POINTLIGHT_DISTANCE id VAR_Integer1

            09E5: create_flash_light_at VAR_VehX VAR_VehY VAR_VehZ RGB_mask VAR_ColorR VAR_ColorG VAR_ColorB radius VAR_Float1
        end
        
        
        0EF5: register_giroflex_corona VAR_Integer1 at_pos VAR_VehX VAR_VehY VAR_VehZ
       
    end 
    
    VAR_Integer1 += 1
end


/*
03F0: enable_text_draw 1
0340: set_text_draw_RGBA 255 255 0 255 
033F: set_text_draw_letter_size 0.5 3.0 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers 300.0 230.0 GXT 'DGFX1' numbers VAR_Integer2 0
*/

/*
03F0: enable_text_draw 1
0340: set_text_draw_RGBA 0 20 255 255 
033F: set_text_draw_letter_size 0.5 3.0 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers 300.0 260.0 GXT 'DGFX1' numbers VAR_Veh 0
*/

return

//----------------------------------------------------

:DRAW_ITEMS

VAR_Integer1 = 0
0EF8: VAR_Integer2 = get_draw_item_info eDrawInfoType_AMOUNT_OF_DRAWITEMS id 0

while VAR_Integer1 < VAR_Integer2
    0EF8: VAR_Type = get_draw_item_info eDrawInfoType_TYPE id VAR_Integer1
    
    if VAR_Type == eDrawType_BOX
    then
        gosub @DRAW_BOX
    end
    
    if VAR_Type == eDrawType_TEXT
    then
        gosub @DRAW_TEXT
    end

    VAR_Integer1 += 1
    
end
return

//----------------------------------------------------

:DRAW_BOX

0EF8: VAR_PosX = get_draw_item_info eDrawInfoType_POS_X id VAR_Integer1
0EF8: VAR_PosY = get_draw_item_info eDrawInfoType_POS_Y id VAR_Integer1

VAR_PosX += MenuOffsetX // why tf is (0,0) offseted to (-195,0)
//VAR_PosY -= 50.0

0EF8: VAR_SizeX = get_draw_item_info eDrawInfoType_SIZE_X id VAR_Integer1
0EF8: VAR_SizeY = get_draw_item_info eDrawInfoType_SIZE_Y id VAR_Integer1

0EF8: VAR_ColorR = get_draw_item_info eDrawInfoType_R id VAR_Integer1
0EF8: VAR_ColorG = get_draw_item_info eDrawInfoType_G id VAR_Integer1
0EF8: VAR_ColorB = get_draw_item_info eDrawInfoType_B id VAR_Integer1
0EF8: VAR_ColorA = get_draw_item_info eDrawInfoType_A id VAR_Integer1

03F0: enable_text_draw 1
038E: draw_box_position VAR_PosX VAR_Posy size VAR_SizeX VAR_SizeY RGBA VAR_ColorR VAR_ColorG VAR_ColorB VAR_ColorA
return

//----------------------------------------------------

:DRAW_TEXT

0EF8: VAR_PosX = get_draw_item_info eDrawInfoType_POS_X id VAR_Integer1
0EF8: VAR_PosY = get_draw_item_info eDrawInfoType_POS_Y id VAR_Integer1

VAR_PosX += MenuOffsetX // why tf is (0,0) offseted to (-195,0)
VAR_PosY -= 10.0

0EF8: VAR_ColorR = get_draw_item_info eDrawInfoType_R id VAR_Integer1
0EF8: VAR_ColorG = get_draw_item_info eDrawInfoType_G id VAR_Integer1
0EF8: VAR_ColorB = get_draw_item_info eDrawInfoType_B id VAR_Integer1
0EF8: VAR_ColorA = get_draw_item_info eDrawInfoType_A id VAR_Integer1

0EF8: VAR_GxtId = get_draw_item_info eDrawInfoType_GXT_ID id VAR_Integer1

0EF8: VAR_Num1 = get_draw_item_info eDrawInfoType_NUM_1 id VAR_Integer1
0EF8: VAR_Num2 = get_draw_item_info eDrawInfoType_NUM_2 id VAR_Integer1

0EF8: VAR_Align = get_draw_item_info eDrawInfoType_ALIGN id VAR_Integer1


03E4: set_text_draw_align_right 0 
0342: set_text_draw_centered 0

if
    VAR_Align == eTextAlign_ALIGN_CENTER
then
    0342: set_text_draw_centered 1
end


if
    VAR_Align == eTextAlign_ALIGN_RIGHT
then
   03E4: set_text_draw_align_right 1
end

VAR_STR_1 = "DGFX0"
gosub @FIND_GFX

03F0: enable_text_draw 1

0341: set_text_draw_align_justify 0 

0340: set_text_draw_RGBA VAR_ColorR VAR_ColorG VAR_ColorB VAR_ColorA
033F: set_text_draw_letter_size 0.3 1.9 //0.5 3.0 origi 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers VAR_PosX VAR_PosY GXT VAR_STR_1 numbers VAR_Num1 VAR_Num2
return

//----------------------------------------------------

:FIND_GFX

if VAR_GxtId == 0
then
     VAR_STR_1 = "DGFX0"
end
if VAR_GxtId == 1
then
     VAR_STR_1 = "DGFX1"
end
if VAR_GxtId == 2
then
     VAR_STR_1 = "DGFX2"
end
if VAR_GxtId == 3
then
     VAR_STR_1 = "DGFX3"
end
if VAR_GxtId == 4
then
     VAR_STR_1 = "DGFX4"
end
if VAR_GxtId == 5
then
     VAR_STR_1 = "DGFX5"
end
if VAR_GxtId == 6
then
     VAR_STR_1 = "DGFX6"
end
if VAR_GxtId == 7
then
     VAR_STR_1 = "DGFX7"
end
if VAR_GxtId == 8
then
     VAR_STR_1 = "DGFX8"
end
if VAR_GxtId == 9
then
     VAR_STR_1 = "DGFX9"
end
if VAR_GxtId == 10
then
     VAR_STR_1 = "DGFX10"
end
if VAR_GxtId == 11
then
     VAR_STR_1 = "DGFX11"
end
if VAR_GxtId == 12
then
     VAR_STR_1 = "DGFX12"
end
if VAR_GxtId == 13
then
     VAR_STR_1 = "DGFX13"
end
if VAR_GxtId == 14
then
     VAR_STR_1 = "DGFX14"
end
if VAR_GxtId == 15
then
     VAR_STR_1 = "DGFX15"
end
if VAR_GxtId == 16
then
     VAR_STR_1 = "DGFX16"
end
if VAR_GxtId == 17
then
     VAR_STR_1 = "DGFX17"
end
if VAR_GxtId == 18
then
     VAR_STR_1 = "DGFX18"
end
if VAR_GxtId == 19
then
     VAR_STR_1 = "DGFX19"
end
if VAR_GxtId == 20
then
     VAR_STR_1 = "DGFX20"
end
if VAR_GxtId == 21
then
     VAR_STR_1 = "DGFX21"
end
if VAR_GxtId == 22
then
     VAR_STR_1 = "DGFX22"
end
if VAR_GxtId == 23
then
     VAR_STR_1 = "DGFX23"
end
if VAR_GxtId == 24
then
     VAR_STR_1 = "DGFX24"
end
if VAR_GxtId == 25
then
     VAR_STR_1 = "DGFX25"
end
if VAR_GxtId == 26
then
     VAR_STR_1 = "DGFX26"
end
if VAR_GxtId == 27
then
     VAR_STR_1 = "DGFX27"
end
if VAR_GxtId == 28
then
     VAR_STR_1 = "DGFX28"
end
if VAR_GxtId == 29
then
     VAR_STR_1 = "DGFX29"
end
if VAR_GxtId == 30
then
     VAR_STR_1 = "DGFX30"
end
if VAR_GxtId == 31
then
     VAR_STR_1 = "DGFX31"
end
if VAR_GxtId == 32
then
     VAR_STR_1 = "DGFX32"
end
if VAR_GxtId == 33
then
     VAR_STR_1 = "DGFX33"
end
if VAR_GxtId == 34
then
     VAR_STR_1 = "DGFX34"
end
if VAR_GxtId == 35
then
     VAR_STR_1 = "DGFX35"
end
if VAR_GxtId == 36
then
     VAR_STR_1 = "DGFX36"
end
if VAR_GxtId == 37
then
     VAR_STR_1 = "DGFX37"
end
if VAR_GxtId == 38
then
     VAR_STR_1 = "DGFX38"
end
if VAR_GxtId == 39
then
     VAR_STR_1 = "DGFX39"
end
if VAR_GxtId == 40
then
     VAR_STR_1 = "DGFX40"
end
if VAR_GxtId == 41
then
     VAR_STR_1 = "DGFX41"
end
if VAR_GxtId == 42
then
     VAR_STR_1 = "DGFX42"
end
if VAR_GxtId == 43
then
     VAR_STR_1 = "DGFX43"
end
if VAR_GxtId == 44
then
     VAR_STR_1 = "DGFX44"
end
if VAR_GxtId == 45
then
     VAR_STR_1 = "DGFX45"
end
if VAR_GxtId == 46
then
     VAR_STR_1 = "DGFX46"
end
if VAR_GxtId == 47
then
     VAR_STR_1 = "DGFX47"
end
if VAR_GxtId == 48
then
     VAR_STR_1 = "DGFX48"
end
if VAR_GxtId == 49
then
     VAR_STR_1 = "DGFX49"
end
if VAR_GxtId == 50
then
     VAR_STR_1 = "DGFX50"
end
if VAR_GxtId == 51
then
     VAR_STR_1 = "DGFX51"
end
if VAR_GxtId == 52
then
     VAR_STR_1 = "DGFX52"
end
if VAR_GxtId == 53
then
     VAR_STR_1 = "DGFX53"
end
if VAR_GxtId == 54
then
     VAR_STR_1 = "DGFX54"
end
if VAR_GxtId == 55
then
     VAR_STR_1 = "DGFX55"
end
if VAR_GxtId == 56
then
     VAR_STR_1 = "DGFX56"
end
if VAR_GxtId == 57
then
     VAR_STR_1 = "DGFX57"
end
if VAR_GxtId == 58
then
     VAR_STR_1 = "DGFX58"
end
if VAR_GxtId == 59
then
     VAR_STR_1 = "DGFX59"
end
if VAR_GxtId == 60
then
     VAR_STR_1 = "DGFX60"
end
if VAR_GxtId == 61
then
     VAR_STR_1 = "DGFX61"
end
if VAR_GxtId == 62
then
     VAR_STR_1 = "DGFX62"
end
if VAR_GxtId == 63
then
     VAR_STR_1 = "DGFX63"
end
if VAR_GxtId == 64
then
     VAR_STR_1 = "DGFX64"
end
if VAR_GxtId == 65
then
     VAR_STR_1 = "DGFX65"
end
if VAR_GxtId == 66
then
     VAR_STR_1 = "DGFX66"
end
if VAR_GxtId == 67
then
     VAR_STR_1 = "DGFX67"
end
if VAR_GxtId == 68
then
     VAR_STR_1 = "DGFX68"
end
if VAR_GxtId == 69
then
     VAR_STR_1 = "DGFX69"
end
if VAR_GxtId == 70
then
     VAR_STR_1 = "DGFX70"
end
if VAR_GxtId == 71
then
     VAR_STR_1 = "DGFX71"
end
return
