{$CLEO .csa}
03A4: script_name 'GiroflexVSL'

//----------------------------------------------------

const
    eDrawType_BOX = 0
    eDrawType_TEXT = 1
    eDrawType_SPRITE = 2
end

const
    eTextAlign_ALIGN_LEFT = 0   
    eTextAlign_ALIGN_CENTER = 1
    eTextAlign_ALIGN_RIGHT = 2
end

const
    eDrawInfoType_AMOUNT_OF_DRAWITEMS = 0
    eDrawInfoType_TYPE = 1
    eDrawInfoType_POS_X = 2
    eDrawInfoType_POS_Y = 3
    eDrawInfoType_SIZE_X = 4
    eDrawInfoType_SIZE_Y = 5
    eDrawInfoType_COLOR_R = 6
    eDrawInfoType_COLOR_G = 7
    eDrawInfoType_COLOR_B = 8
    eDrawInfoType_COLOR_A = 9
    eDrawInfoType_GXT_ID = 10
    eDrawInfoType_NUM_1 = 11    
    eDrawInfoType_NUM_2 = 12
    eDrawInfoType_ALIGN = 13
    eDrawInfoType_SPRITE_ID = 14
    eDrawInfoType_MENU_OFFSET_X = 15
end

const
    VAR_Integer1 = 0@
    VAR_Integer2 = 1@
    
    VAR_Type = 2@
    VAR_PosX = 3@
    VAR_PosY = 4@
    VAR_PosZ = 5@
    
    VAR_SizeX = 6@
    VAR_SizeY = 7@
    
    VAR_ColorR = 8@
    VAR_ColorG = 9@
    VAR_ColorB = 10@
    VAR_ColorA = 11@
    
    VAR_GxtId = 12@
    VAR_Num1 = 13@
    VAR_Num2 = 14@
    
    MenuOffsetX = 15@
    
    VAR_Align = 16@
    
    VAR_STR_1 = 17@v //jump +4
    
    VAR_SpriteID = 21@ 
end

var
    VAR_Integer1 : Int = 0
    VAR_Integer2 : Int = 0
    
    VAR_PosX : Float = 0.0    
    VAR_PosY : Float = 0.0
    VAR_PosZ : Float = 0.0
    MenuOffsetX : Float = 0.0
end

//----------------------------------------------------

:LOOP
0001: wait 0 ms 

gosub @SEND_TOUCH

0EF0: process_menu_vsl_lib deltaMs 10

03F0: enable_text_draw 1
0340: set_text_draw_RGBA 0 20 255 255 
033F: set_text_draw_letter_size 0.5 3.0 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers 300.0 200.0 GXT 'DGFX2' numbers 1 2

0EF1: MenuOffsetX = get_draw_item_info eDrawInfoType_MENU_OFFSET_X id 0

0050: gosub @DRAW_ITEMS

0002: jump @LOOP 

//----------------------------------------------------

:SEND_TOUCH

for VAR_Integer1 = 1 to 9
    0DE0: VAR_Integer2 = get_touch_point_state VAR_Integer1 mintime 0
    0EF2: send_touch_state VAR_Integer1 state VAR_Integer2
end
return

//----------------------------------------------------

:DRAW_ITEMS

VAR_Integer1 = 0
0EF1: VAR_Integer2 = get_draw_item_info eDrawInfoType_AMOUNT_OF_DRAWITEMS id 0

while VAR_Integer1 < VAR_Integer2
    0EF1: VAR_Type = get_draw_item_info eDrawInfoType_TYPE id VAR_Integer1
    
    if VAR_Type == eDrawType_BOX
    then
        gosub @DRAW_BOX
    end
    
    if VAR_Type == eDrawType_TEXT
    then
        gosub @DRAW_TEXT
    end
    
    if VAR_Type == eDrawType_SPRITE
    then
        gosub @DRAW_SPRITE
    end

    VAR_Integer1 += 1
    
end
return

//----------------------------------------------------

:DRAW_BOX

0EF1: VAR_PosX = get_draw_item_info eDrawInfoType_POS_X id VAR_Integer1
0EF1: VAR_PosY = get_draw_item_info eDrawInfoType_POS_Y id VAR_Integer1

VAR_PosX += MenuOffsetX // why tf is (0,0) offseted to (-195,0)
//VAR_PosY -= 50.0

0EF1: VAR_SizeX = get_draw_item_info eDrawInfoType_SIZE_X id VAR_Integer1
0EF1: VAR_SizeY = get_draw_item_info eDrawInfoType_SIZE_Y id VAR_Integer1

0EF1: VAR_ColorR = get_draw_item_info eDrawInfoType_COLOR_R id VAR_Integer1
0EF1: VAR_ColorG = get_draw_item_info eDrawInfoType_COLOR_G id VAR_Integer1
0EF1: VAR_ColorB = get_draw_item_info eDrawInfoType_COLOR_B id VAR_Integer1
0EF1: VAR_ColorA = get_draw_item_info eDrawInfoType_COLOR_A id VAR_Integer1

03F0: enable_text_draw 1
038E: draw_box_position VAR_PosX VAR_Posy size VAR_SizeX VAR_SizeY RGBA VAR_ColorR VAR_ColorG VAR_ColorB VAR_ColorA
return

//----------------------------------------------------

:DRAW_TEXT

0EF1: VAR_PosX = get_draw_item_info eDrawInfoType_POS_X id VAR_Integer1
0EF1: VAR_PosY = get_draw_item_info eDrawInfoType_POS_Y id VAR_Integer1

VAR_PosX += MenuOffsetX // why tf is (0,0) offseted to (-195,0)
VAR_PosY -= 10.0

0EF1: VAR_ColorR = get_draw_item_info eDrawInfoType_COLOR_R id VAR_Integer1
0EF1: VAR_ColorG = get_draw_item_info eDrawInfoType_COLOR_G id VAR_Integer1
0EF1: VAR_ColorB = get_draw_item_info eDrawInfoType_COLOR_B id VAR_Integer1
0EF1: VAR_ColorA = get_draw_item_info eDrawInfoType_COLOR_A id VAR_Integer1

0EF1: VAR_GxtId = get_draw_item_info eDrawInfoType_GXT_ID id VAR_Integer1

0EF1: VAR_Num1 = get_draw_item_info eDrawInfoType_NUM_1 id VAR_Integer1
0EF1: VAR_Num2 = get_draw_item_info eDrawInfoType_NUM_2 id VAR_Integer1

0EF1: VAR_Align = get_draw_item_info eDrawInfoType_ALIGN id VAR_Integer1


03E4: set_text_draw_align_right 0 
0342: set_text_draw_centered 0
060D: draw_text_shadow 0 rgba 0 0 0 255 

if
    VAR_Align == eTextAlign_ALIGN_CENTER
then
    0342: set_text_draw_centered 1
end


if
    VAR_Align == eTextAlign_ALIGN_RIGHT
then
   03E4: set_text_draw_align_right 1
end

VAR_STR_1 = "DGFX0"
gosub @FIND_GFX

03F0: enable_text_draw 1

0341: set_text_draw_align_justify 0 

0340: set_text_draw_RGBA VAR_ColorR VAR_ColorG VAR_ColorB VAR_ColorA
033F: set_text_draw_letter_size 0.3 1.9 //0.5 3.0 origi 
0343: set_text_draw_linewidth 640.0
045B: draw_text_2numbers VAR_PosX VAR_PosY GXT VAR_STR_1 numbers VAR_Num1 VAR_Num2
return

//----------------------------------------------------


:DRAW_SPRITE

0EF1: VAR_SpriteID = get_draw_item_info eDrawInfoType_SPRITE_ID id VAR_Integer1

0EF1: VAR_PosX = get_draw_item_info eDrawInfoType_POS_X id VAR_Integer1
0EF1: VAR_PosY = get_draw_item_info eDrawInfoType_POS_Y id VAR_Integer1

VAR_PosX += MenuOffsetX // why tf is (0,0) offseted to (-195,0)
//VAR_PosY -= 50.0

0EF1: VAR_SizeX = get_draw_item_info eDrawInfoType_SIZE_X id VAR_Integer1
0EF1: VAR_SizeY = get_draw_item_info eDrawInfoType_SIZE_Y id VAR_Integer1

0EF1: VAR_ColorR = get_draw_item_info eDrawInfoType_COLOR_R id VAR_Integer1
0EF1: VAR_ColorG = get_draw_item_info eDrawInfoType_COLOR_G id VAR_Integer1
0EF1: VAR_ColorB = get_draw_item_info eDrawInfoType_COLOR_B id VAR_Integer1
0EF1: VAR_ColorA = get_draw_item_info eDrawInfoType_COLOR_A id VAR_Integer1

038D: draw_texture VAR_SpriteID position VAR_PosX VAR_Posy size VAR_SizeX VAR_SizeY RGBA VAR_ColorR VAR_ColorG VAR_ColorB VAR_ColorA
return

//----------------------------------------------------

:FIND_GFX

if VAR_GxtId == 0
then
     VAR_STR_1 = "DGFX0"
end
if VAR_GxtId == 1
then
     VAR_STR_1 = "DGFX1"
end
if VAR_GxtId == 2
then
     VAR_STR_1 = "DGFX2"
end
if VAR_GxtId == 3
then
     VAR_STR_1 = "DGFX3"
end
if VAR_GxtId == 4
then
     VAR_STR_1 = "DGFX4"
end
if VAR_GxtId == 5
then
     VAR_STR_1 = "DGFX5"
end
if VAR_GxtId == 6
then
     VAR_STR_1 = "DGFX6"
end
return